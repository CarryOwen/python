temperature = [
[-40,210.5283,202.2693,194.3148],
[-39,198.7519,191.0637,183.6545],
[-38,187.7137,180.5546,173.6511],
[-37,177.3629,170.6944,164.2601],
[-36,167.6522,161.4387,155.44],
[-35,158.5379,152.7468,147.1525],
[-34,149.9798,144.5807,139.362],
[-33,141.9402,136.9052,132.0356],
[-32,134.3847,129.6879,125.1427],
[-31,127.2809,122.8985,118.655],
[-30,120.5991,116.5089,112.5462],
[-29,114.3116,110.4932,106.7917],
[-28,108.3927,104.8272,101.3688],
[-27,102.8185,99.4883,96.2564],
[-26,97.5669,94.4558,91.4348],
[-25,92.6171,89.7101,86.8857],
[-24,87.9501,85.2332,82.592],
[-23,83.5479,81.0082,78.5378],
[-22,79.394,77.0194,74.7084],
[-21,75.4728,73.2523,71.0899],
[-20,71.77,69.6931,67.6695],
[-19,68.272,66.3291,64.4351],
[-18,64.9663,63.1485,61.3754],
[-17,61.8412,60.1402,58.4802],
[-16,58.8858,57.2939,55.7394],
[-15,56.0899,54.5998,53.144],
[-14,53.4439,52.049,50.6855],
[-13,50.9389,49.633,48.3557],
[-12,48.5666,47.3439,46.1473],
[-11,46.3192,45.1743,44.0532],
[-10,44.1895,43.1172,42.0668],
[-9,42.1705,41.1663,40.182],
[-8,40.2558,39.3153,38.393],
[-7,38.4396,37.5587,36.6943],
[-6,36.7162,35.891,35.081],
[-5,35.0802,34.3074,33.548],
[-4,33.5269,32.8029,32.0914],
[-3,32.0515,31.3734,30.7065],
[-2,30.6497,30.0145,29.3896],
[-1,29.3174,28.7225,28.1368],
[0,28.0508,27.4936,26.9448],
[1,26.8464,26.3245,25.8102],
[2,25.7006,25.2119,24.73],
[3,24.6103,24.1527,23.701],
[4,23.5726,23.1442,22.7213],
[5,22.5846,22.1835,21.7874],
[6,21.6436,21.2682,20.8973],
[7,20.7472,20.3959,20.0486],
[8,19.8931,19.5644,19.2392],
[9,19.0789,18.7714,18.467],
[10,18.3027,18.0151,17.7303],
[11,17.5624,17.2935,17.027],
[12,16.8561,16.6048,16.3556],
[13,16.1823,15.9475,15.7145],
[14,15.5391,15.3198,15.102],
[15,14.9251,14.7203,14.5168],
[16,14.3387,14.1475,13.9576],
[17,13.7786,13.6003,13.4229],
[18,13.2434,13.0772,12.9117],
[19,12.732,12.5771,12.4228],
[20,12.2431,12.0988,11.955],
[21,11.7756,11.6413,11.5074],
[22,11.3286,11.2037,11.079],
[23,10.9009,10.7848,10.6689],
[24,10.4917,10.3839,10.2762],
[25,10.1,10,9.9],
[26,9.7323,9.6324,9.5325],
[27,9.38,9.2802,9.1806],
[28,9.0424,8.9428,8.8435],
[29,8.7186,8.6195,8.5206],
[30,8.4082,8.3096,8.2113],
[31,8.1105,8.0124,7.9147],
[32,7.8249,7.7275,7.6305],
[33,7.5508,7.4541,7.3579],
[34,7.2878,7.1919,7.0965],
[35,7.0353,6.9403,6.8458],
[36,6.7929,6.6987,6.6052],
[37,6.5601,6.4669,6.3744],
[38,6.3364,6.2442,6.1527],
[39,6.1216,6.0304,5.94],
[40,5.9151,5.825,5.7357],
[41,5.7167,5.6276,5.5394],
[42,5.5259,5.438,5.3509],
[43,5.3425,5.2557,5.1698],
[44,5.1661,5.0804,4.9957],
[45,4.9964,4.9119,4.8283],
[46,4.8331,4.7498,4.6674],
[47,4.6761,4.5939,4.5127],
[48,4.5249,4.4439,4.3639],
[49,4.3793,4.2995,4.2207],
[50,4.2392,4.1605,4.083],
[51,4.1042,4.0268,3.9504],
[52,3.9742,3.898,3.8228],
[53,3.849,3.7739,3.7],
[54,3.7283,3.6544,3.5817],
[55,3.6121,3.5393,3.4677],
[56,3.5,3.4284,3.358],
[57,3.3919,3.3215,3.2523],
[58,3.2877,3.2185,3.1504],
[59,3.1872,3.1191,3.0522],
[60,3.0903,3.0234,2.9575],
[61,2.9968,2.931,2.8663],
[62,2.9066,2.8419,2.7783],
[63,2.8196,2.7559,2.6934],
[64,2.7355,2.6729,2.6115],
[65,2.6544,2.5929,2.5325],
[66,2.5761,2.5156,2.4563],
[67,2.5004,2.441,2.3827],
[68,2.4274,2.369,2.3117],
[69,2.3568,2.2994,2.2432],
[70,2.2886,2.2322,2.177],
[71,2.2227,2.1673,2.1131],
[72,2.159,2.1046,2.0513],
[73,2.0974,2.044,1.9917],
[74,2.0379,1.9854,1.934],
[75,1.9804,1.9288,1.8783],
[76,1.9247,1.874,1.8245],
[77,1.8709,1.8211,1.7725],
[78,1.8188,1.7699,1.7221],
[79,1.7685,1.7204,1.6735],
[80,1.7197,1.6725,1.6264],
[81,1.6725,1.6262,1.5809],
[82,1.6269,1.5813,1.5369],
[83,1.5827,1.5379,1.4943],
[84,1.5399,1.4959,1.4531],
[85,1.4984,1.4553,1.4132],
[86,1.4583,1.4159,1.3746],
[87,1.4194,1.3778,1.3372],
[88,1.3817,1.3408,1.301],
[89,1.3452,1.3051,1.266],
[90,1.3099,1.2704,1.232],
[91,1.2756,1.2368,1.1991],
[92,1.2424,1.2043,1.1673],
[93,1.2102,1.1728,1.1364],
[94,1.1789,1.1422,1.1065],
[95,1.1487,1.1126,1.0775],
[96,1.1193,1.0839,1.0494],
[97,1.0908,1.056,1.0222],
[98,1.0632,1.029,0.9958],
[99,1.0364,1.0028,0.9702],
[100,1.0104,0.9774,0.9453]
]
length=len(temperature)
def findTemperature(var):
    varLen=0
    print("varLen:",varLen)
    print("length:",length)
    print("var:",var)
    while varLen<length:
        # 如果值为1.08
        if var < temperature[varLen][1] and var > temperature[varLen][3]:
            print("temperature[varLen][1] :",temperature[varLen][1] )
            if var < temperature[varLen+1][1]:
                # 找到更接近参考值的温度
                if abs(var - temperature[varLen][2] )< abs(var - temperature[varLen+1][2]) :
                    print("Got temperature:",temperature[varLen][0])
                    return temperature[varLen][0]
                else:
                    print("Got temperature:",temperature[varLen+1][0])
                    return temperature[varLen+1][0]
            else:
                print("Got temperature:",temperature[varLen][0])
                return temperature[varLen][0]
            break
        # 如果不在已知区间，取中间值
        if var > temperature[varLen+1][1]: 
            print("Got temperature:",(temperature[varLen+1][0]+temperature[varLen][0])/2)
            return (temperature[varLen+1][0]+temperature[varLen][0])/2
            break
        else: 
            varLen=varLen+1

def main():
    findTemperature(13.25)
if __name__ == "__main__":
    main()